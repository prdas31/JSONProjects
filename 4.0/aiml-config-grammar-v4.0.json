{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Artificial Intelligence and Machine Learning Model Configuration Grammar v4.0",
  "description": "A comprehensive schema for configuring various AI and machine learning models, including deep learning, reinforcement learning, and advanced ML concepts. This schema supports both training and inference configurations, as well as experimental settings and deployment options.",
  "type": "object",
  "version": "4.0",
  "properties": {
    "version": { "type": "string" },
    "configType": { "type": "string", "enum": ["training", "inference"] },
    "modelType": {
      "type": "string",
      "enum": [
        "CNN", "RNN", "Transformer", "ObjectDetection", "TimeSeries", 
        "NLP", "ReinforcementLearning", "LLM", "GAN", "AutoEncoder",
		"GeneralML", "Custom"
      ]
    },
    "modelImplementation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The specific name or version of the model implementation"
        },
        "version": {
          "type": "string",
          "description": "Version of the model implementation, if applicable"
        },
        "framework": {
          "type": "string",
          "description": "The framework or library used for this model implementation",
          "enum": ["TensorFlow", "PyTorch", "Keras", "scikit-learn", "Custom"]
        },
        "customProperties": {
          "type": "object",
          "description": "Any additional properties specific to this model implementation",
          "additionalProperties": true
        }
      },
      "required": ["name"],
      "additionalProperties": false
    },	
	
	"preprocessing": {
      "type": "array",
      "description": "Array of preprocessing steps to be applied to the input data",
      "items": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "description": "The type of preprocessing operation to perform",
            "enum": ["resize", "normalize", "crop", "flip", "rotate", "scale", "custom"]
          },
          "parameters": {
            "type": "object",
            "description": "Parameters specific to the preprocessing operation",
            "properties": {
              "width": { "type": "number" },
              "height": { "type": "number" },
              "mean": { 
                "type": "array",
                "items": { "type": "number" }
              },
              "std": { 
                "type": "array",
                "items": { "type": "number" }
              },
              "angle": { "type": "number" },
              "probability": { "type": "number" },
              "customFunction": { "type": "string" }
            },
            "additionalProperties": true
          }
        },
        "required": ["operation"],
        "additionalProperties": false
      }
    },

    "postprocessing": {
      "type": "array",
      "description": "Array of postprocessing steps to be applied to the model output",
      "items": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "description": "The type of postprocessing operation to perform",
            "enum": ["nms", "filter", "threshold", "custom"]
          },
          "parameters": {
            "type": "object",
            "description": "Parameters specific to the postprocessing operation",
            "properties": {
              "iouThreshold": { "type": "number" },
              "scoreThreshold": { "type": "number" },
              "maxDetections": { "type": "integer" },
              "minConfidence": { "type": "number" },
              "customFunction": { "type": "string" }
            },
            "additionalProperties": true
          }
        },
        "required": ["operation"],
        "additionalProperties": false
      }
    },
	
    "metadata": {
      "type": "object",
      "properties": {
        "name": { "type": "string" },
        "description": { "type": "string" },
        "author": { "type": "string" },
        "dateCreated": { "type": "string", "format": "date-time" },
        "lastModified": { "type": "string", "format": "date-time" },
        "version": { "type": "string" },
        "tags": {
          "type": "array",
          "items": { "type": "string" }
        }
      },
		"additionalProperties": true
    },
    "parameters": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "description": { "type": "string" },
          "category": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["number", "string", "boolean", "array", "object", "multiProperties"]
          },
          "widgetType": {
            "type": "string",
            "enum": [
              "text", "number", "checkbox", "dropdown", "radio", "slider", 
              "multiselect", "multiInput", "group", "colorPicker", "datePicker"
            ]
          },
          "default": {},
          "required": { "type": "boolean" },
          "applicableTo": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": ["training", "inference"]
            },
            "description": "Specifies whether this parameter applies to training, inference, or both"
          },
          "validation": {
            "type": "object",
            "properties": {
              "min": { "type": "number" },
              "max": { "type": "number" },
              "step": { "type": "number" },
              "regex": { "type": "string" },
              "customValidation": { "type": "string" }
            }
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": { "type": "string" },
                "value": {}
              }
            }
          },
          "dataSource": {
            "type": "object",
            "properties": {
              "type": { 
                "type": "string", 
                "enum": ["static", "api", "sql", "function"] 
              },
              "endpoint": { "type": "string" },
              "method": { "type": "string" },
              "query": { "type": "string" },
              "functionName": { "type": "string" }
            }
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "on": { "type": "string" },
                "condition": { "type": "string" },
                "action": { "type": "string" }
              }
            }
          },
          "children": {
            "type": "array",
            "items": { "$ref": "#/properties/parameters/items" }
          },
          "properties": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "type": { "type": "string" },
                "widgetType": { "type": "string" },
                "options": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "label": { "type": "string" },
                      "value": {}
                    }
                  }
                }
              }
            }
          },
			"additionalProperties": true
        },
        "required": ["id", "name", "type", "widgetType", "applicableTo"]
      }
    },
  
    "neuralNetworkParameters": {
      "type": "object",
      "description": "Parameters common to neural network models",
      "properties": {
        "layers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["Dense", "Conv2D", "LSTM", "GRU", "Dropout", "BatchNormalization"]
              },
              "units": { "type": "number" },
              "activation": {
                "type": "string",
                "enum": ["relu", "sigmoid", "tanh", "softmax", "linear"]
              },
              "kernelSize": {
                "type": "array",
                "items": { "type": "number" }
              },
              "filters": { "type": "number" },
              "rate": { "type": "number" }
            }
          }
        },
        "optimizer": {
		  "type": "object",
		  "description": "Reference to the optimizer defined in trainingParameters",
		  "$ref": "#/properties/trainingParameters/properties/optimizer"
		},
        "lossFunction": { "type": "string" },
        "metrics": {
          "type": "array",
          "items": { "type": "string" }
        }
      },
		"additionalProperties": true
    },
    "timeSeriesParameters": {
      "type": "object",
      "description": "Parameters specific to time series models",
      "properties": {
        "seasonality": {
          "type": "object",
          "properties": {
            "yearly": { "type": "boolean" },
            "quarterly": { "type": "boolean" },
            "monthly": { "type": "boolean" },
            "weekly": { "type": "boolean" },
            "daily": { "type": "boolean" }
          }
        },
        "forecastHorizon": { "type": "number" },
        "laggedFeatures": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "featureName": { "type": "string" },
              "lagValues": {
                "type": "array",
                "items": { "type": "number" }
              }
            }
          }
        },
        "rollingWindowSize": { "type": "number" }
      },
		"additionalProperties": true
    },
    "nlpParameters": {
      "type": "object",
      "description": "Parameters specific to NLP models",
      "properties": {
        "tokenization": {
          "type": "string",
          "enum": ["word", "subword", "character"]
        },
        "maxSequenceLength": { "type": "number" },
        "vocabularySize": { "type": "number" },
        "embeddingDimension": { "type": "number" },
        "languageModel": {
          "type": "string",
          "enum": ["BERT", "GPT", "T5", "custom"]
        },
        "customStopWords": {
          "type": "array",
          "items": { "type": "string" }
        },
        "caseSensitive": { "type": "boolean" }
      },
		"additionalProperties": true
    },
    "reinforcementLearningParameters": {
      "type": "object",
      "description": "Parameters specific to reinforcement learning models",
      "properties": {
        "environment": {
          "type": "object",
          "properties": {
            "name": { "type": "string" },
            "observationSpace": {
              "type": "object",
              "properties": {
                "type": { "type": "string", "enum": ["discrete", "continuous"] },
                "dimension": { "type": "number" }
              }
            },
            "actionSpace": {
              "type": "object",
              "properties": {
                "type": { "type": "string", "enum": ["discrete", "continuous"] },
                "dimension": { "type": "number" }
              }
            }
          }
        },
        "agent": {
          "type": "object",
          "properties": {
            "type": { "type": "string", "enum": ["DQN", "DDPG", "PPO", "A3C"] },
            "explorationRate": {
              "type": "object",
              "properties": {
                "initial": { "type": "number" },
                "final": { "type": "number" },
                "decaySteps": { "type": "number" }
              }
            }
          }
        },
        "rewardStructure": {
          "type": "object",
          "properties": {
            "type": { "type": "string", "enum": ["sparse", "dense"] },
            "discountFactor": { "type": "number" }
          }
        },
        "episodeLength": { "type": "number" }
      },
		"additionalProperties": true
    },
    "objectDetectionParameters": {
      "type": "object",
      "description": "Parameters specific to object detection models",
      "properties": {
        "architecture": {
          "type": "string",
          "enum": ["YOLO", "SSD", "RCNN", "RetinaNet"]
        },
        "backbone": {
          "type": "string",
          "enum": ["ResNet50", "MobileNetV2", "EfficientNet"]
        },
        "anchorSizes": {
          "type": "array",
          "items": { "type": "number" }
        },
        "iouThreshold": { "type": "number" },
        "scoreThreshold": { "type": "number" },
        "maxDetections": { "type": "number" }
      },
		"additionalProperties": true
    },
    "transformerParameters": {
      "type": "object",
      "description": "Parameters specific to Transformer-based models and LLMs",
      "properties": {
        "architecture": {
          "type": "string",
          "enum": ["Encoder-only", "Decoder-only", "Encoder-Decoder"],
          "description": "The overall architecture of the Transformer model"
        },
        "modelSize": {
          "type": "object",
          "properties": {
            "hiddenSize": { "type": "number", "description": "Size of the hidden layers" },
            "numLayers": { "type": "number", "description": "Number of layers in the model" },
            "numHeads": { "type": "number", "description": "Number of attention heads" }
          },
			"additionalProperties": true
        },
        "vocabularySize": { "type": "number", "description": "Size of the model's vocabulary" },
        "maxSequenceLength": { "type": "number", "description": "Maximum sequence length the model can handle" },
        "tokenizer": {
          "type": "object",
          "properties": {
            "type": { 
              "type": "string", 
              "enum": ["BPE", "WordPiece", "SentencePiece", "Unigram"],
              "description": "Type of tokenizer used"
            },
            "vocabulary": { "type": "string", "description": "Path to the vocabulary file" }
          },
			"additionalProperties": true
        },
        "pretrainedModel": {
          "type": "object",
          "properties": {
            "name": { "type": "string", "description": "Name of the pretrained model" },
            "source": { "type": "string", "enum": ["HuggingFace", "OpenAI", "Custom"], "description": "Source of the pretrained model" },
            "path": { "type": "string", "description": "Path to the pretrained model weights" }
          },
			"additionalProperties": true
        },
        "finetuning": {
          "type": "object",
          "properties": {
            "freezeLayers": { "type": "array", "items": { "type": "string" }, "description": "List of layer names to freeze during fine-tuning" },
            "taskSpecificHead": {
              "type": "object",
              "properties": {
                "type": { "type": "string", "enum": ["Classification", "TokenClassification", "QuestionAnswering", "Summarization", "Translation"] },
                "numLabels": { "type": "number", "description": "Number of output labels for classification tasks" }
              }
            }
          },
			"additionalProperties": true
        },
        "promptEngineering": {
          "type": "object",
          "properties": {
            "templateFormat": { "type": "string", "description": "Format for prompt templates" },
            "systemPrompt": { "type": "string", "description": "System-level prompt for setting context" },
            "fewShotExamples": { 
              "type": "array", 
              "items": {
                "type": "object",
                "properties": {
                  "input": { "type": "string" },
                  "output": { "type": "string" }
                }
              },
              "description": "Few-shot examples for in-context learning"
            }
          },
			"additionalProperties": true
        }
      }
    },
    "trainingParameters": {
      "type": "object",
      "description": "Parameters specific to model training",
      "properties": {
        "epochs": { "type": "number" },
        "batchSize": { "type": "number" },
        "learningRate": { "type": "number" },
        "optimizer": {
          "type": "object",
          "properties": {
            "name": { "type": "string", "enum": ["Adam", "AdamW", "SGD", "RMSprop"] },
            "parameters": { "type": "object" }
          }
        },
        "lossFunction": { "type": "string" },
        "regularization": {
          "type": "object",
          "properties": {
            "type": { "type": "string", "enum": ["L1", "L2", "Dropout"] },
            "value": { "type": "number" }
          }
        },
        "learningRateSchedule": {
          "type": "string",
          "enum": ["Linear", "Cosine", "Warmup", "ReduceOnPlateau"]
        },
        "gradientAccumulationSteps": { "type": "number" },
        "mixedPrecisionTraining": { "type": "boolean" },
        "earlyStopping": {
          "type": "object",
          "properties": {
            "monitor": { "type": "string" },
            "patience": { "type": "number" },
            "minDelta": { "type": "number" }
          }
        },
        "checkpointing": {
          "type": "object",
          "properties": {
            "frequency": { "type": "string" },
            "path": { "type": "string" }
          }
        },
        "dataAugmentation": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": { "type": "string" },
              "parameters": { "type": "object" }
            }
          }
        },
		"validationStrategy": {
		  "type": "object",
		  "properties": {
			"method": {
			  "type": "string",
			  "enum": ["holdout", "kFold", "stratifiedKFold", "timeSeriesSplit"]
			},
			"splitRatio": { "type": "number" },
			"numFolds": { "type": "integer" },
			"shuffle": { "type": "boolean" }
		  },
		  "required": ["method"]
		},
      },
		"additionalProperties": true
    },
    "inferenceParameters": {
      "type": "object",
      "description": "Parameters specific to model inference",
      "properties": {
        "batchSize": { "type": "number" },
        "deviceType": {
          "type": "string",
          "enum": ["CPU", "GPU", "TPU"]
        },
        "quantization": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "type": { "type": "string", "enum": ["INT8", "FP16"] }
          }
        },
		"confidenceThreshold": {
		  "type": "number",
		  "description": "Minimum confidence score for accepting a prediction in classification tasks",
		  "minimum": 0,
		  "maximum": 1
		},
        "modelPath": { "type": "string" },
        "decodingMethod": { 
          "type": "string", 
          "enum": ["Greedy", "Beam Search", "Nucleus Sampling", "Temperature Sampling"]
        },
        "temperature": { "type": "number" },
        "topK": { "type": "number" },
        "topP": { "type": "number" },
        "beamSize": { "type": "number" },
        "maxNewTokens": { "type": "number" },
        "repetitionPenalty": { "type": "number" },
        "stopSequences": { "type": "array", "items": { "type": "string" } }
		
      },
		"additionalProperties": true
    },
    "distributedTraining": {
      "type": "object",
      "properties": {
        "strategy": { 
          "type": "string", 
          "enum": ["DataParallel", "ModelParallel", "PipelineParallel", "ZeRO"]
        },
        "numGPUs": { "type": "number" },
        "numNodes": { "type": "number" }
      }
    },
    "evaluationMetrics": {
      "type": "array",
      "items": { 
        "type": "string", 
        "enum": ["Accuracy", "Precision", "Recall", "F1", "AUC", "MAP", "BLEU", "ROUGE", "Perplexity"]
      }
    },
    "experimentTracking": {
      "type": "object",
      "description": "Configuration for experiment tracking and logging",
      "properties": {
        "platform": {
          "type": "string",
          "enum": ["MLflow", "Weights & Biases", "TensorBoard", "Neptune.ai", "Custom"],
          "description": "The platform used for experiment tracking"
        },
        "projectName": { "type": "string" },
        "experimentName": { "type": "string" },
        "tags": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "key": { "type": "string" },
              "value": { "type": "string" }
            }
          }
        },
        "metrics": {
          "type": "array",
          "items": { "type": "string" },
          "description": "List of metrics to track during training"
        },
        "artifacts": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "path": { "type": "string" },
              "type": { "type": "string", "enum": ["model", "dataset", "plot", "other"] }
            }
          }
        },
        "logFrequency": {
          "type": "string",
          "enum": ["every_n_steps", "every_n_epochs", "on_validation"]
        }
      },
		"additionalProperties": true
    },
    "modelVersioning": {
      "type": "object",
      "description": "Configuration for model versioning and lifecycle management",
      "properties": {
        "versioningStrategy": {
          "type": "string",
          "enum": ["semantic", "timestamp", "incremental", "git-like"]
        },
        "currentVersion": { "type": "string" },
        "previousVersion": { "type": "string" },
        "changeLog": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "version": { "type": "string" },
              "changes": { "type": "array", "items": { "type": "string" } },
              "date": { "type": "string", "format": "date-time" },
              "author": { "type": "string" }
            }
          }
        },
        "modelRegistry": {
          "type": "object",
          "properties": {
            "url": { "type": "string" },
            "credentials": {
              "type": "object",
              "properties": {
                "username": { "type": "string" },
                "accessToken": { "type": "string" }
              }
            }
          }
        }
      },
		"additionalProperties": true
    },
    "dataHandling": {
      "type": "object",
      "description": "Advanced configuration for data handling and preprocessing",
      "properties": {
        "datasetVersion": { "type": "string" },
        "dataLoader": {
          "type": "object",
          "properties": {
            "batchSize": { "type": "number" },
            "numWorkers": { "type": "number" },
            "prefetchFactor": { "type": "number" },
            "pinMemory": { "type": "boolean" }
          }
        },
        "dataPipeline": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "operation": { "type": "string" },
              "parameters": { "type": "object" }
            }
          },
          "description": "Sequence of data preprocessing operations"
        },
        "dataAugmentation": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": { "type": "string" },
              "probability": { "type": "number" },
              "parameters": { "type": "object" }
            }
          }
        },
        "caching": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "strategy": { "type": "string", "enum": ["memory", "disk"] },
            "capacity": { "type": "string" }
          }
        },
        "sampling": {
          "type": "object",
          "properties": {
            "method": { "type": "string", "enum": ["random", "stratified", "weighted"] },
            "ratio": { "type": "number" }
          }
        }
      },
		"additionalProperties": true
    },
    "hyperparameterTuning": {
      "type": "object",
      "description": "Configuration for hyperparameter tuning",
      "properties": {
        "method": {
          "type": "string",
          "enum": ["grid_search", "random_search", "bayesian_optimization", "evolutionary"]
        },
        "metric": { "type": "string" },
        "numTrials": { "type": "number" },
        "parameterSpace": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "type": { "type": "string", "enum": ["categorical", "integer", "float", "loguniform"] },
              "values": { "type": "array" },
              "min": { "type": "number" },
              "max": { "type": "number" }
            }
          }
        }
      },
		"additionalProperties": true
    },
    "deploymentConfig": {
      "type": "object",
      "description": "Configuration for model deployment",
      "properties": {
        "platform": { "type": "string", "enum": ["kubernetes", "serverless", "edge", "mobile"] },
        "scalingPolicy": {
          "type": "object",
          "properties": {
            "minInstances": { "type": "number" },
            "maxInstances": { "type": "number" },
            "targetCPUUtilization": { "type": "number" }
          }
        },
        "servingFramework": { "type": "string", "enum": ["TensorFlow Serving", "TorchServe", "ONNX Runtime", "Triton Inference Server"] },
        "monitoringConfig": {
          "type": "object",
          "properties": {
            "metrics": { "type": "array", "items": { "type": "string" } },
            "alertingThresholds": { "type": "object" }
          }
        },
        "versioningStrategy": { "type": "string", "enum": ["blue-green", "canary", "rolling"] }
      },
		"additionalProperties": true
    },
    "federatedLearning": {
      "type": "object",
      "description": "Configuration for federated learning setups",
      "properties": {
        "enabled": { "type": "boolean" },
        "aggregationMethod": {
          "type": "string",
          "enum": ["FedAvg", "FedProx", "FedMA", "Custom"]
        },
        "clientSelectionStrategy": {
          "type": "string",
          "enum": ["Random", "RoundRobin", "PowerOfChoice"]
        },
        "numRounds": { "type": "number" },
        "minClientsPerRound": { "type": "number" },
        "maxClientsPerRound": { "type": "number" },
        "clientFraction": { "type": "number" },
        "localEpochs": { "type": "number" },
        "privacyMechanism": {
          "type": "string",
          "enum": ["DifferentialPrivacy", "SecureAggregation", "None"]
        },
        "communicationCompression": {
          "type": "object",
          "properties": {
            "method": { "type": "string", "enum": ["Quantization", "SparseCoding", "None"] },
            "parameters": { "type": "object" }
          }
        }
      },
		"additionalProperties": true
    },
	
	"privacyPreservingML": {
	  "type": "object",
	  "description": "Configuration for privacy-preserving machine learning techniques",
	  "properties": {
		"differentialPrivacy": {
		  "type": "object",
		  "properties": {
			"enabled": { "type": "boolean" },
			"epsilon": { "type": "number" },
			"delta": { "type": "number" },
			"mechanism": { "type": "string", "enum": ["Laplace", "Gaussian"] },
			"clippingThreshold": { "type": "number" }
		  }
		},
		"homomorphicEncryption": {
		  "type": "object",
		  "properties": {
			"enabled": { "type": "boolean" },
			"scheme": { "type": "string", "enum": ["CKKS", "BFV", "BGV"] },
			"keySize": { "type": "number" }
		  }
		},
		"secureMultiPartyComputation": {
		  "type": "object",
		  "properties": {
			"enabled": { "type": "boolean" },
			"protocol": { "type": "string", "enum": ["SPDZ", "SecureNN", "ABY"] },
			"numParties": { "type": "number" }
		  }
		}
	  },
		"additionalProperties": true
	}, 
    "modelInterpretability": {
      "type": "object",
      "description": "Configuration for model interpretability and explainability techniques",
      "properties": {
        "methods": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["SHAP", "LIME", "IntegratedGradients", "Anchors", "PartialDependence"]
          }
        },
        "globalExplanations": {
          "type": "object",
          "properties": {
            "featureImportance": { "type": "boolean" },
            "partialDependencePlots": { "type": "boolean" }
          }
        },
        "localExplanations": {
          "type": "object",
          "properties": {
            "numSamples": { "type": "number" },
            "kernelWidth": { "type": "number" }
          }
        },
        "explanationFormat": {
          "type": "string",
          "enum": ["text", "visualizations", "both"]
        }
      },
		"additionalProperties": true
    },
    "autoML": {
      "type": "object",
      "description": "Configuration for AutoML processes",
      "properties": {
        "enabled": { "type": "boolean" },
        "timeLimit": { "type": "number" },
        "maxModels": { "type": "number" },
        "taskType": {
          "type": "string",
          "enum": ["classification", "regression", "timeSeriesForecasting", "objectDetection"]
        },
        "optimizationMetric": { "type": "string" },
        "allowedModels": {
          "type": "array",
          "items": { "type": "string" }
        },
        "featureEngineering": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "maxFeatures": { "type": "number" }
          }
        },
        "ensembling": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "maxModelsInEnsemble": { "type": "number" },
            "method": { "type": "string", "enum": ["bagging", "boosting", "stacking"] }
          }
        }
      },
		"additionalProperties": true
    },
    "continuousLearning": {
      "type": "object",
      "description": "Configuration for continuous learning and model updates",
      "properties": {
        "enabled": { "type": "boolean" },
        "updateFrequency": {
          "type": "string",
          "enum": ["hourly", "daily", "weekly", "onThreshold"]
        },
        "performanceThreshold": { "type": "number" },
        "dataAccumulationStrategy": {
          "type": "string",
          "enum": ["rollingWindow", "incrementalUpdate", "fullRetrain"]
        },
        "modelSelectionCriteria": {
          "type": "array",
          "items": { "type": "string" }
        },
        "versionControl": {
          "type": "object",
          "properties": {
            "enabled": { "type": "boolean" },
            "maxVersionsKept": { "type": "number" }
          }
        }
      },
		"additionalProperties": true
    }
  },
  "required": ["version", "configType", "modelType", "parameters"]
}
